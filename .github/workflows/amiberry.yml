name: Amiberry
on:
  workflow_dispatch:
    inputs:
      plat:
        description: 'Target platform: https://github.com/BlitterStudio/amiberry/blob/master/Makefile'
        required: true
      dist:
        description: 'Target Debian version index: 5, 6, 7 or all'
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.plat }}-${{ github.event.inputs.dist }}
  cancel-in-progress: true
permissions: {}
jobs:
  prep:
    outputs:
      plat: ${{ steps.plat.outputs.plat }}
      dist: ${{ steps.dist.outputs.dist }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: sh
    steps:
    - id: plat
      run: |
        if [ '${{ github.event.inputs.plat }}' = 'all' ]
        then
          echo plat='[rpi1, rpi2, rpi3, rpi4, rpi3-64-dmx, rpi4-64-dmx, c1, xu4, RK3288, sun8i, s812, AMLSM1, n2, a64, x86-64, rk3588]' >> "$GITHUB_OUTPUT"
        else
          echo plat='[${{ github.event.inputs.plat }}]' >> "$GITHUB_OUTPUT"
        fi
    - id: dist
      run: |
        if [ '${{ github.event.inputs.dist }}' = 'all' ]
        then
          echo dist='[5, 6, 7]' >> "$GITHUB_OUTPUT"
        else
          echo dist='[${{ github.event.inputs.dist }}]' >> "$GITHUB_OUTPUT"
        fi
  build:
    needs: prep
    strategy:
      matrix:
        plat: ${{ fromJson(needs.prep.outputs.plat) }}
        dist: ${{ fromJson(needs.prep.outputs.dist) }}
        exclude:
        - { plat: rk3588, dist: 5 }
      fail-fast: false
    name: "Build: ${{ matrix.plat }} - ${{ matrix.dist }}"
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: /dev/shm
    steps:
    - name: Build
      run: sudo bash -c "G_GITOWNER=$GITHUB_REPOSITORY_OWNER G_GITBRANCH=$GITHUB_REF_NAME; $(curl -sSf "https://raw.githubusercontent.com/$GITHUB_REPOSITORY_OWNER/DietPi/$GITHUB_REF_NAME/.build/software/Amiberry/container_build.bash")" -- -p '${{ matrix.plat }}' -d '${{ matrix.dist }}'
    - name: Upload
      run: |
        # Build variables
        dist=${{ matrix.dist }}
        dist_to_name=([5]='buster' [6]='bullseye' [7]='bookworm')
        dist_name=${dist_to_name[$dist]}

        # SSH server and client keys
        mkdir ~/.ssh
        umask 377
        echo '${{ secrets.KNOWN_HOSTS }}' > ~/.ssh/known_hosts
        echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_ed25519

        # Upload
        curl -T 'rootfs/amiberry_${{ matrix.plat }}.deb' --key ~/.ssh/id_ed25519 "${{ secrets.UPLOAD_URL }}$dist_name/"
        curl 'https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/purge_cache' -H 'Authorization: Bearer ${{ secrets.CF_TOKEN }}' -H 'Content-Type: application/json' \
        --data "{\"files\":[\"https://dietpi.com/downloads/binaries/$dist_name/testing/\",\"https://dietpi.com/downloads/binaries/$dist_name/testing/amiberry_${{ matrix.plat }}.deb\"]}"
